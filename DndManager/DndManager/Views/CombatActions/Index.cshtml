@model CombatActionsWithAbilitiesVM

<partial name="_SuccessNotification" />

<div class="container-fluid">
    <input type="hidden" asp-for="@ViewData["PcId"]" name="PcId" id="PcId" />

    <div class="row align-items-center mb-3">
        <div class="col-4 d-flex justify-content-start">
            <a class="btn btn-primary btn-md" role="button" asp-area="" asp-controller="Pcs" asp-action="Details" asp-route-id="@ViewData["PcId"]">
                <i class="fas fa-arrow-left"></i>
            </a>
        </div>
        <div class="col-4  d-flex justify-content-center">
            <h5> Combat Actions </h5>
        </div>
        <div class="col-4 d-flex justify-content-end">
            <partial name="_CombatActionCreatableModal" model="new CombatActionVM() { CombatAttack = new CombatAttackVM(), CombatDamage = new CombatDamageVM(), CombatSavingThrow = new CombatSavingThrowVM()}" view-data="@ViewData" />
            <button class="btn btn-primary" id="addCombatAction" data-toggle="modal" data-target="#combatActionCreatableModal"><i class="fas fa-plus"></i></button>
        </div>
    </div>
    <div class="row" style="width:inherit;">

        @foreach (var action in Model.CombatActions)
        {
            var bonusstr = action.Id;
            var acc = "accordion" + bonusstr;
            var heading = "heading" + bonusstr;
            var collps = "collapseActionCombat" + bonusstr;


            <div class="card mb-2 mt-2 box-shadow" style="width:inherit;" id="@{@acc}">
                <div class="card-header" id="@{@heading}">
                    <div class="row">
                        <div class="col-4">
                            <input asp-for="@action.Name" readonly class="form-control-plaintext" />
                        </div>
                        <div class="col-2">
                            <input asp-for="@action.Type" readonly class="form-control-plaintext" />
                        </div>
                        <div class="col d-flex align-content-center justify-content-end">
                            <button type='button' class="btn btn-primary m-0 mr-3" data-toggle="collapse" data-target="#@{@collps}" aria-expanded="false" aria-controls="@{@collps}">
                                Details
                            </button>

                            <partial name="_CombatActionEditableModal" model="@action" />
                            <button class="btn btn-primary m-0 mr-3" role="button" id="editCombatAction" onclick="showCombatActionEditableModal(`@action.Id`)"><i class="fas fa-edit"></i></button>

                            <form asp-controller="CombatActions" asp-action="Delete" asp-route-id="@bonusstr" asp-route-pcid="@action.PcId">
                                <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure you want to delete action: @action.Name?')"> <i class="fas fa-times"></i> </button>
                            </form>
                        </div>
                    </div>
                </div>

                <div id="@{@collps}" class="collapse" aria-labelledby="@{@heading}" data-parent="#@{@acc}">
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <h5>Attack</h5>
                                @{
                                    var attack = 0;
                                    if (action.CombatAttack.AbilityId != null) attack += (int)@Model.Abilities.Find(a => a.Id.Equals(action.CombatAttack.AbilityId)).Value.Mod();
                                    if (action.CombatAttack.IsProficient) attack += Model.Proficiency;
                                    attack += action.CombatAttack.AdditionalBonus;
                                }
                                +@attack
                                @action.CombatAttack.Range
                            </div>
                            <div class="col">
                                <h5>Damage</h5>
                                @{
                                    var damage = 0;
                                    var dmgStr = "";

                                    if (action.CombatDamage.AbilityId != null) damage += (int)@Model.Abilities.Find(a => a.Id.Equals(action.CombatAttack.AbilityId)).Value.Mod();
                                    if (action.CombatDamage.DamageDice != null && action.CombatDamage.DamageDice.Length != 0) dmgStr += action.CombatDamage.DamageDice + " + ";

                                    damage += action.CombatDamage.AdditionalBonus;
                                    dmgStr += damage.ToString() + "  ";
                                    if (action.CombatDamage.DamageType != null && action.CombatDamage.DamageType.Length != 0) dmgStr += action.CombatDamage.DamageType;

                                }
                                @dmgStr
                            </div>
                            <div class="col">
                                <h5>Saving Throw</h5>
                                @{
                                    var savingThrow = 0;
                                    if (action.CombatSavingThrow.AbilityId != null)
                                    {
                                        var ability = Model.Abilities.Find(a => a.Id.Equals(action.CombatSavingThrow.AbilityId));
                                        savingThrow = 8 + (int)ability.Value.Mod() + Model.Proficiency;
                                    }
                                 }
                                    DC @savingThrow
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section scripts{
    <script>
        function showCombatActionEditableModal(id) {
            $('#combatActionEditableModal_'.concat(id)).modal('show');
        }
    </script>
}