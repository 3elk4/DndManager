@model CombatActionsWithAbilitiesVM

<div class="container-fluid">
    <input type="hidden" asp-for="@ViewData["PcId"]" name="PcId" id="PcId" />

    <div class="row align-items-center mb-3">
        <div class="col-4 d-flex justify-content-start">
            <a class="btn btn-primary btn-md" role="button" asp-area="" asp-controller="Pcs" asp-action="Details" asp-route-id="@ViewData["PcId"]">
                <i class="fas fa-arrow-left"></i>
            </a>
        </div>
        <div class="col-4  d-flex justify-content-center">
            <h5> Combat Actions </h5>
        </div>
        <div class="col-4 d-flex justify-content-end">
            <a class="btn btn-primary" type="button" onclick="addCombatAction(`/CombatActions/NewCombatAction/@ViewData["PcId"]`)">
                <i class="fas fa-plus"></i>
            </a>
            <div id="modalCombatActionWrapper"></div>
        </div>
    </div>
    <div class="row">
        <div id="editorRows" class="container text-center">
            @foreach (var action in Model.CombatActions)
            {
                var bonusstr = action.Id;
                var acc = "accordion" + bonusstr;
                var heading = "heading" + bonusstr;
                var collps = "collapseActionCombat" + bonusstr;

                <div id="editorItem" class="row" style="width:inherit;">
                    <div class="card mb-2 mt-2 box-shadow" style="width:inherit;" id="@{@acc}">
                        <div class="card-header" id="@{@heading}">
                            <div class="row">
                                <div class="col-4">
                                    <input asp-for="@action.Name" readonly class="form-control form-control-plaintext" />
                                </div>
                                <div class="col-2">
                                    <input asp-for="@action.Type" readonly class="form-control form-control-plaintext" />
                                </div>
                                <div class="col d-flex align-content-center justify-content-end">
                                    <button type='button' class="btn btn-primary m-0 mr-3" data-toggle="collapse" data-target="#@{@collps}" aria-expanded="false" aria-controls="@{@collps}">
                                        Details
                                    </button>

                                    <button type='button' class="btn btn-primary m-0 mr-3" onclick="addCombatAction(`/CombatActions/Edit/@action.Id`)">
                                        <i class="fas fa-edit"></i>
                                    </button>

                                    <form asp-controller="CombatActions" asp-action="Delete" asp-route-id="@bonusstr">
                                        <button type="submit" class="btn btn-primary" onclick="return confirm('Are you sure you want to delete action: @action.Name?')"> <i class="fas fa-times"></i> </button>
                                    </form>
                                    @*<form method="post">
            <a href="" data-value="/combatactions/delete/@action.Id" class="deleteRow">X</a>
        </form>*@
                                </div>
                            </div>
                        </div>

                        <div id="@{@collps}" class="collapse" aria-labelledby="@{@heading}" data-parent="#@{@acc}">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <h5>Attack</h5>
                                        @{
                                            var attack = 0;
                                            if (action.CombatAttack.AbilityId != null) attack += (int)@Model.Abilities.Find(a => a.Id.Equals(action.CombatAttack.AbilityId)).Value.Mod();
                                            if (action.CombatAttack.IsProficient) attack += Model.Proficiency;
                                            attack += action.CombatAttack.AdditionalBonus;
                                        }
                                        +@attack
                                        @action.CombatAttack.Range
                                    </div>
                                    <div class="col">
                                        <h5>Damage</h5>
                                        @{
                                            var damage = 0;
                                            var dmgStr = "";

                                            if (action.CombatDamage.AbilityId != null) damage += (int)@Model.Abilities.Find(a => a.Id.Equals(action.CombatAttack.AbilityId)).Value.Mod();
                                            if (action.CombatDamage.DamageDice != null && action.CombatDamage.DamageDice.Length != 0) dmgStr += action.CombatDamage.DamageDice + " + ";

                                            damage += action.CombatDamage.AdditionalBonus;
                                            dmgStr += damage.ToString() + "  ";
                                            if (action.CombatDamage.DamageType != null && action.CombatDamage.DamageType.Length != 0) dmgStr += action.CombatDamage.DamageType;

                                        }
                                        @dmgStr
                                    </div>
                                    <div class="col">
                                        <h5>Saving Throw</h5>
                                        @*{
                                            var savingThrow = 0; ; // Wis Dc13 :')

                                            if (action.CombatSavingThrow.AbilityId != null) savingThrow += abilities.Find(a => a.Id.Equals(action.CombatAttack.AbilityId)).Mod();
                                        }
                                        <input asp-for="@savingThrow" readonly class="form-control form-control-plaintext" />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>




@section scripts {
    <script type="text/javascript" src="~/js/dynamicItemsEdit.js"></script>
    <script>
        const { search } = window.location;
        const errorCode = (new URLSearchParams(search)).get('errorCode');
        if (errorCode === '0') {
            toast('success', 'Data was successfully saved!');
        }
        else if (errorCode === '1') {
            toast('danger', 'Something went wrong while saving data...');
        }
        else if (errorCode === '2') {
            toast('danger', 'Provided data is invalid!');
        }

        function addCombatAction(url) {
            $.ajax({
                url: url,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#modalCombatActionWrapper').html(result);
                    $('#editCombatActionModal').modal('show');
                }
            });
        }
    </script>
}