@model SpellInfoAndAbilitiesVM

@{
    var ability = Model.Abilities.FirstOrDefault(a => a.Id.Equals(Model.SpellInfo.AbilityId));
    var spelllvls = Model.SpellInfo.SpellLvls.OrderBy(x => x.Lvl);
}

<div class="container-fluid">
    <div class="row align-items-center mb-3">
        <div class="col-4 d-flex justify-content-start">
            <a class="btn btn-primary btn-md" role="button" asp-area="" asp-controller="Pcs" asp-action="Details" asp-route-id="@ViewData["PcId"]">
                <i class="fas fa-arrow-left"></i>
            </a>
        </div>
        <div class="col-4  d-flex justify-content-center">
            <h5> Spells </h5>
        </div>
        <div class="col-4 d-flex justify-content-end">
            <partial name="_SpellInfoAbilityEditableModal" model="@Model" />
            <button class="btn btn-primary" id="editSpellAbility" data-toggle="modal" data-target="#editSpellAbilityModal"><i class="fas fa-edit"></i></button>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="container text-center box-shadow mb-3 mt-3">
                <div class="row p-3">
                    <label> <h5>Ability </h5> </label>
                    <input asp-for="@ability.Name" readonly class="form-control-plaintext" />
                </div>

                @{
                    int saveDc = 0; int attackBonus = 0;
                    if (ability != null)
                    {
                        attackBonus = (int)ability.Value.Mod() + Model.Proficiency;
                        saveDc = 8 + attackBonus;
                    }

                }

                <div class="row p-3">
                    <label><h5>Save DC</h5></label>
                    <input asp-for="@saveDc" readonly class="form-control-plaintext" />
                </div>
                <div class="row p-3">
                    <label><h5>Attack Bonus</h5></label>
                    <input asp-for="@attackBonus" readonly class="form-control-plaintext" />
                </div>
               
            </div>
        </div>
        <div class="col-8">
            <div class="container text-center box-shadow mb-3 mt-3">
                <div class="row d-flex justify-content-center align-content-center">
                    @for(int i = 0; i < 5; ++i)
                    {
                        var spellLvl = spelllvls.ElementAt(i);
                        <div class="col p-2">
                            <a class="btn btn-primary" role="button" asp-action="ShowSpellLvl" asp-controller="Spells" asp-route-spellinfoid="@spellLvl.SpellInfoId" asp-route-id="@spellLvl.Id" > <b>@spellLvl.Lvl</b> </a>
                        </div>
                    }
                </div>

                <div class="row d-flex flex-row justify-content-center align-content-center">
                    @for (int i = 5; i < 10; ++i)
                    {
                        var spellLvl = spelllvls.ElementAt(i);
                        <div class="col p-2">
                            <a class="btn btn-primary" role="button"  asp-action="ShowSpellLvl" asp-controller="Spells" asp-route-spellinfoid="@spellLvl.SpellInfoId" asp-route-id="@spellLvl.Id"> <b>@spellLvl.Lvl</b> </a>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>






    @section scripts {
        <script>
            const { search } = window.location;
            const errorCode = (new URLSearchParams(search)).get('errorCode');
            if (errorCode === '0') {
                toast('success', 'Data was successfully saved!');
            }
            else if (errorCode === '1') {
                toast('danger', 'Something went wrong while saving data...');
            }
            else if (errorCode === '2') {
                toast('danger', 'Provided data is invalid!');
            }
        </script>
    }
