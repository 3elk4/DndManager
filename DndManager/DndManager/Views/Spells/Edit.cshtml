@model SpellInfoAndAbilitiesVM

@{ 
    //if (Model.SpellInfo.SpellLvls != null)
    //{
    //    Model.SpellInfo.SpellLvls.Sort((s1, s2) => { return s1.Lvl == s2.Lvl ? 0 : (s1.Lvl < s2.Lvl ? -1 : 1); });
    //}
    var ability = Model.Abilities.First(a => a.Id.Equals(Model.SpellInfo.AbilityId));
}

<div>
    <a href="/pcs/details/@ViewData["PcId"]"> Back to Character </a>
</div>

<div class="container text-center border" style="margin-top:10px;margin-bottom:10px;">
    <div class="row" style="margin-top:10px;margin-bottom:10px;">
        <div class="col">
            <label>
                Ability
                <a onclick="editSpellAbility(`/Spells/EditAbility/@ViewData["PcId"]`)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                    </svg>
                </a>
                <div id="modalSpellAbilityWrapper"></div>
            </label>
        </div>
        <div class="col">
            <label>Save DC</label>
        </div>
        <div class="col">
            <label>Attack Bonus</label>
        </div>
    </div>
    <div class="row" style="margin-top:10px;margin-bottom:10px;">
        <div class="col">
            <input asp-for="@ability.Name" readonly class="form-control form-control-plaintext" />
        </div>
        @{
            int saveDc = 0; int attackBonus = 0;
            if (ability != null)
            {
                attackBonus = (int)PcHelper.Mod(ability.Value) + Model.Proficiency;
                saveDc = 8 + attackBonus;
            }

        }
        <div class="col">
            <input asp-for="@saveDc" readonly class="form-control form-control-plaintext" />
        </div>
        <div class="col">
            <input asp-for="@attackBonus" readonly class="form-control form-control-plaintext" />
        </div>
    </div>
</div>

<div class="container text-center border">
    @if (Model.SpellInfo.SpellLvls != null)
    {
        foreach (var spellLvl in Model.SpellInfo.SpellLvls)
        {
            <div class="card" style="margin:10px; width:inherit;">
                <div class="card-header">
                        <a href="/Spells/EditSpellLvl/@spellLvl.Id">
                            @spellLvl.Lvl
                        </a>
                </div>
            </div>

        }
    }
</div>
        

@section scripts {
    <script>
        const { search } = window.location;
        const errorCode = (new URLSearchParams(search)).get('errorCode');
        if (errorCode === '0') {
            toast('success', 'Data was successfully saved!');
        }
        else if (errorCode === '1') {
            toast('danger', 'Something went wrong while saving data...');
        }
        else if (errorCode === '2') {
            toast('danger', 'Provided data is invalid!');
        }

        function editSpellAbility(url) {
            $.ajax({
                url: url,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#modalSpellAbilityWrapper').html(result);
                    $('#editSpellAbilityModal').modal('show');
                }
            });
        }
    </script>
}